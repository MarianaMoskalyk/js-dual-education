//–ó–∞–≤–¥–∞–Ω–Ω—è 1
function createStepCounter() {
  // –°—Ç–≤–æ—Ä—é—é –∑–º—ñ–Ω–Ω—É, —è–∫–∞ –∑–±–µ—Ä—ñ–≥–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–æ–∫—ñ–≤ ‚Äî –ø—Ä–∏–≤–∞—Ç–Ω–∞ (—á–µ—Ä–µ–∑ –∑–∞–º–∏–∫–∞–Ω–Ω—è)
  let steps = 0;

  return {
    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫—Ä–æ–∫—ñ–≤
    step() {
      steps++;
    },
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫—Ä–æ–∫—ñ–≤
    getSteps() {
      return steps;
    },
  };
}

// üîπ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
const counter = createStepCounter();
counter.step();
counter.step();
console.log(counter.getSteps()); // 2

//–ó–∞–≤–¥–∞–Ω–Ω—è 2
function createBankAccount(initialBalance) {
  // –ü—Ä–∏–≤–∞—Ç–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
  let balance = initialBalance;

  return {
    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤–Ω–µ—Å–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤
    deposit(amount) {
      if (amount > 0) {
        balance += amount;
        console.log(`–î–æ–¥–∞–Ω–æ ${amount}. –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: ${balance}`);
      } else {
        console.log("–°—É–º–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0");
      }
    },

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–Ω—è—Ç—Ç—è –∫–æ—à—Ç—ñ–≤
    withdraw(amount) {
      if (amount <= balance && amount > 0) {
        balance -= amount;
        console.log(`–ó–Ω—è—Ç–æ ${amount}. –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: ${balance}`);
      } else {
        console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –∞–±–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —Å—É–º–∞");
      }
    },

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É
    getBalance() {
      return balance;
    },
  };
}

// üîπ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
const myAccount = createBankAccount(100);
myAccount.deposit(50); // –î–æ–¥–∞–Ω–æ 50. –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: 150
myAccount.withdraw(30); // –ó–Ω—è—Ç–æ 30. –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: 120
console.log(myAccount.getBalance()); // 120

//–ó–∞–≤–¥–∞–Ω–Ω—è 3
function createGreeter(name) {
  // –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø–∞–º‚Äô—è—Ç–æ–≤—É—î –∑–Ω–∞—á–µ–Ω–Ω—è name —á–µ—Ä–µ–∑ –∑–∞–º–∏–∫–∞–Ω–Ω—è
  return function () {
    console.log(`–ü—Ä–∏–≤—ñ—Ç, ${name}!`);
  };
}

// üîπ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
const greetOlya = createGreeter("–û–ª—è");
greetOlya(); // "–ü—Ä–∏–≤—ñ—Ç, –û–ª—è!"

const greetMax = createGreeter("–ú–∞–∫—Å–∏–º");
greetMax(); // "–ü—Ä–∏–≤—ñ—Ç, –ú–∞–∫—Å–∏–º!"

//–ó–∞–≤–¥–∞–Ω–Ω—è 4
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é let, —â–æ–± –∫–æ–∂–Ω–µ i –∑–±–µ—Ä—ñ–≥–∞–ª–æ—Å—è –æ–∫—Ä–µ–º–æ –≤ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó
for (let i = 1; i <= 5; i++) {
  // –í–∏–≤–æ–¥–∂—É —á–∏—Å–ª–æ –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é (1 —Å–µ–∫—É–Ω–¥–∞ * –Ω–æ–º–µ—Ä —ñ—Ç–µ—Ä–∞—Ü—ñ—ó)
  setTimeout(() => {
    console.log(i);
  }, i * 1000);
}

// üîπ –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –≤ –∫–æ–Ω—Å–æ–ª—ñ –∑‚Äô—è–≤–∏—Ç—å—Å—è:
// 1 (—á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É)
// 2 (—á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏)
// 3 (—á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏)
// 4 (—á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥–∏)
// 5 (—á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥)
